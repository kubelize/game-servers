apiVersion: v1
kind: Pod
metadata:
  name: test-sdtd
  namespace: sdtd
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: ReplicaSet
    name: kube-game-servers-6984847f66
    uid: 008c3d04-183f-4c09-8021-f6d3e0ce060a
  resourceVersion: "46188891"
  uid: 40b42368-80eb-48bc-86e3-40e4aa386860
spec:
  containers:
  - image: kubelize/game-servers:0.2.8-sdtd
    command: ["sleep", "infinity"]
    imagePullPolicy: IfNotPresent
    name: game-servers
    ports:
    - containerPort: 80
      name: http
      protocol: TCP
    resources: {}
    securityContext: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /home/kubelize/steam/config-data/config-values.yaml
      name: server-config
      subPath: config-values.yaml
    - mountPath: /home/kubelize/steam/config-data/serverpassword.yaml
      name: server-password
      subPath: serverpassword.yaml
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-dd98h
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  nodeName: talos-4eo-l1n
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: kube-game-servers
  serviceAccountName: kube-game-servers
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - configMap:
      defaultMode: 420
      name: server-config
    name: server-config
  - name: server-password
    secret:
      defaultMode: 420
      secretName: kube-game-servers-server-password
  - name: kube-api-access-dd98h
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace