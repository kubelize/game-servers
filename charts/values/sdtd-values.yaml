# Default values for game-servers.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: kubelize/game-servers
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "0.2.9-sdtd"

# This is for the secretes for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# Server Password
# The Key of the Secret has to be ServerPassword
# If you don't specify an existing secret, a new one will be created
serverPasswordSecret:
  useExisting: false
  existingSecretName: ""

# Server Configuration
# These are the default values needed for the 7 Days to Die server.
serverConfig:
# Copy these values into your `values.yaml` file to use them under the `serverConfig` key.  
  # Details
  ServerName: "My Game Server"
  ServerDescription: "Managed by kubelize"
  ServerWebsiteURL: ""
  ServerLoginConfirmationText: ""
  Region: "Europe"
  Language: "English"

  # Networking
  ServerPort: "26900"
  ServerVisibility: "2"
  ServerDisabledNetworkProtocols: "SteamNetworking"
  ServerMaxWorldTransferSpeed: "512"

  # Player Slots
  ServerMaxPlayerCount: "8"
  ServerReservedSlots: "0"
  ServerReservedSlotsPermission: "100"
  ServerAdminSlots: "0"
  ServerAdminSlotsPermission: "0"

  # Web Interface
  WebDashboardEnabled: "false"
  WebDashboardPort: "8080"
  WebDashboardUrl: ""
  EnableMapRendering: "false"
  TelnetEnabled: "true"
  TelnetPort: "8081"
  TelnetFailedLoginLimit: ""
  TelnetFailedLoginsBlocktime: "10"
  TerminalWindowEnabled: "10"

  # Various Settings
  ServerAllowCrossplay: "false"
  EACEnabled: "true"
  IgnoreEOSSanctions: "false"
  HideCommandExecutionLog: "0"
  MaxUncoveredMapChunksPerPlayer: "131072"
  PersistentPlayerProfiles: "false"
  MaxChunkAge: "-1"
  SaveDataLimit: "-1"
  ServerMaxAllowedViewDistance: "12"
  MaxQueuedMeshLayers: "1000"

  # World
  GameWorld: "Navezgane"
  WorldGenSeed: "asdf"
  WorldGenSize: "6144"
  GameName: "My Game"
  GameMode: "GameModeSurvival"

  # Difficulty
  GameDifficulty: "1"
  BlockDamagePlayer: "100"
  BlockDamageAI: "100"
  BlockDamageAIBM: "100"
  XPMultiplier: "100"
  PlayerSafeZoneLevel: "5"
  PlayerSafeZoneHours: "5"

  # Modes
  CreativeMode: "false"
  DayNightLength: "60"
  DayLightLength: "18"
  DeathPenalty: "1"
  DropOnDeath: "1"
  DropOnQuit: "0"
  BedrollDeadZoneSize: "15"
  BedrollExpiryTime: "45"
  TwitchServerPermission: "90"
  TwitchBloodMoonAllowed: "false"
  QuestProgressionDailyLimit: "4"

  # AI Settings
  MaxSpawnedZombies: "64"
  MaxSpawnedAnimals: "50"
  EnemySpawnMode: "true"
  EnemyDifficulty: "0"
  ZombieFeralSense: "0"
  ZombieMove: "0"
  ZombieMoveNight: "3"
  ZombieFeralMove: "3"
  ZombieBMMove: "3"
  BloodMoonFrequency: "7"
  BloodMoonRange: "0"
  BloodMoonWarning: "8"
  BloodMoonEnemyCount: "8"

  # Loot
  LootAbundance: "100"
  LootRespawnDays: "7"
  AirDropFrequency: "72"
  AirDropMarker: "true"

  # Multiplayer
  PartySharedKillRange: "100"
  PlayerKillingMode: "3"

  # Land Claim
  LandClaimCount: "3"
  LandClaimSize: "41"
  LandClaimDeadZone: "30"
  LandClaimExpiryTime: "7"
  LandClaimDecayMode: "0"
  LandClaimOnlineDurabilityModifier: "4"
  LandClaimOfflineDurabilityModifier: "4"
  LandClaimOfflineDelay: "0"
  DynamicMeshEnabled: "true"
  DynamicMeshLandClaimOnly: "true"
  DynamicMeshLandClaimBuffer: "3"
  DynamicMeshMaxItemCache: "3"

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/ 
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# Service for the game ports
gameService:
  annotations:
    "lbipam.cilium.io/ips": "10.130.5.236"
  type: LoadBalancer
  ports:
    - name: gameport1tcp
      protocol: TCP
      port: 26900
      targetPort: 26900
    - name: gameport1udp
      protocol: UDP
      port: 26900
      targetPort: 26900
    - name: gameport2udp
      protocol: UDP
      port: 26901
      targetPort: 26901
    - name: gameport3udp
      protocol: UDP
      port: 26902
      targetPort: 26902

# Second service for webadmin HTTP port (used with ingress)
webService:
  enabled: true
  type: ClusterIP
  ports:
    - name: webadmin
      protocol: TCP
      port: 8080
      targetPort: 8080

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  enabled: false
  config:
    httpGet:
      path: /healthz
      port: 8080
    initialDelaySeconds: 3
    periodSeconds: 3

readinessProbe:
  enabled: false
  config:
    httpGet:
      path: /readiness
      port: 8080
    initialDelaySeconds: 3
    periodSeconds: 3

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts:
  - name: server-config
    mountPath: "/home/kubelize/steam/config-data/config-values.yaml"
    subPath: "config-values.yaml"

volumes:
  - name: server-config
    configMap:
      name: server-config

nodeSelector: {}

tolerations: []

affinity: {}
